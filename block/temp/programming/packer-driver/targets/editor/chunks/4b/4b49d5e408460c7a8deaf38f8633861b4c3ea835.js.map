{"version":3,"sources":["file:///Users/wangzhaoye/block-practice/block/assets/script/Mgr/GridManager.ts"],"names":["_decorator","Component","game","instantiate","Node","Prefab","Rect","UITransform","v2","GridData","GridObj","GridItem","WeaponData","GridBgItem","EventConstant","ccclass","property","GridManager","init","instance","initGridList","initAllGridList","gridData","bagCfg","max_grid","i","length","element","j","item","gridBgItem","gridBgPrefab","parent","allGridList","getComponent","gridList","removeAllChildren","getGridMapData","gridItem","gridPrefab","initGridStatus","items","children","setDeafult","cherGridStatus","posArr","weaponItem","wid","weaponCfg","tempId","gridIndexArr","gridMapData","n","checkPos","index","m","gridObj","gridValue","pos","getGridPosByTiled","width","gridWidth","height","gridHeight","rect","x","y","contains","push","curWeaponTildeIndex","placeWeaponKeyArr","includes","getGridTiledByIndex","row","col","setRed","weaponKey","setYellow","sanmeCount","setGreen","checkSameWeapoIdByKey","level","Level","group","weaponGroupNum","checkWeaponByLevel","setIconYellow","emit","WEAPON_ICON_STATUS","WEAPON_SHAKE","onWeaponMove","Type","typeArr","split","Number","pointPosArr","points","Points","deletGridDataByWeaponId","gripObj","tieldPos","wpos","point","convertToWorldSpaceAR","node","convertToNodeSpaceAR","WEAPON_ICON_STATUS_INIT","onEnable","on","WEAPON_MOVE","WEAPON_PlACE","INIT_BUILD_GRID_LIST","onDisable","off","clear"],"mappings":"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","sourcesContent":["import { _decorator, Component, game, instantiate, Intersection2D, Node, Prefab, Rect, UITransform, v2, Vec2, Vec3 } from 'cc';\nimport { GridData, GridObj } from '../../Data/GridData';\nimport { WeaponItem } from '../../Weapon/WeaponItem';\nimport { GridItem } from \"../Grid/GridItem\";\nimport { WeaponData, WeaponModel } from '../../Data/WeaponData';\nimport { GridBgItem } from '../Grid/GridBgItem';\nimport { EventConstant } from '../../EventConstant';\nconst { ccclass, property } = _decorator;\n\n@ccclass('GridManager')\nexport class GridManager extends Component {\n    @property(Node)\n    private allGridList: Node = null!;  //所有格子列表\n    @property(Node)\n    private gridList: Node = null!;\n    @property(Prefab)\n    private gridPrefab: Prefab = null!;\n    @property(Prefab)\n    private gridBgPrefab: Prefab = null!; //所有格子背景预制体\n\n    public init() {\n        GridData.instance.init();\n        this.initGridList();\n        this.initAllGridList();\n    }\n\n    /* 初始所有的背景格子 */\n    private initAllGridList() {\n        let gridData: string[][] = GridData.instance.bagCfg.max_grid;\n        for (let i = 0; i < gridData.length; i++) {\n            const element = gridData[i];\n            for (let j = 0; j < element.length; j++) {\n                const item: string = element[j];\n                let gridBgItem: Node = instantiate(this.gridBgPrefab);\n                gridBgItem.parent = this.allGridList;\n                gridBgItem.getComponent(GridBgItem)!.init(i, j, item);\n            }\n        }\n    }\n\n    private initGridList() {\n        this.gridList.removeAllChildren();\n        let gridData: string[][] = GridData.instance.getGridMapData();\n        for (let i = 0; i < gridData.length; i++) {\n            const element = gridData[i];\n            for (let j = 0; j < element.length; j++) {\n                const item: string = element[j];\n                let gridItem: Node = instantiate(this.gridPrefab);\n                gridItem.parent = this.gridList;\n                gridItem.getComponent(GridItem)!.init(i, j, item);\n            }\n        }\n    }\n\n    /* 初始化格子状态 */\n    private initGridStatus() {\n        let items: Node[] = this.gridList.children;\n        for (let j = 0; j < items.length; j++) {\n            const element: Node = items[j];\n            element.getComponent(GridItem)!.setDeafult();\n        }\n    }\n\n    /**\n     * 检测位置状态(检测坐标)\n     * @param posArr \n     * @param wid 武器id\n     */\n    private cherGridStatus(posArr: Array<Vec3>, weaponItem: WeaponItem) {\n        let wid: number = weaponItem.weaponCfg.tempId;\n        let gridIndexArr: Array<number> = [];\n        let items: Node[] = this.gridList.children;\n        let gridMapData: string[][] = GridData.instance.getGridMapData();\n        for (let n = 0; n < posArr.length; n++) {\n            const checkPos: Vec3 = posArr[n];\n            let index: number = -1;\n            for (let m = 0; m < items.length; m++) {\n                const element: Node = items[m];\n                let gridObj: GridObj = element.getComponent(GridItem)!.gridObj;\n                let gridValue: string = element.getComponent(GridItem)!.gridValue;\n                let pos: Vec3 = GridData.instance.getGridPosByTiled(gridObj);\n                let width: number = GridData.instance.gridWidth;\n                let height: number = GridData.instance.gridHeight;\n                let rect: Rect = new Rect(pos.x - width / 2, pos.y - height / 2, width, height);\n                if (rect.contains(v2(checkPos.x, checkPos.y)) && gridValue) {\n                    index = m;\n                    break;\n                }\n            }\n            gridIndexArr.push(index);\n        }\n        GridData.instance.curWeaponTildeIndex = gridIndexArr;\n        let placeWeaponKeyArr: string[] = [];//被占用可抖动的武器key(多个)\n        if (gridIndexArr.includes(-1)) {\n            //超出区域(占用和未占用)\n            for (let j = 0; j < items.length; j++) {\n                const element: Node = items[j];\n                if (gridIndexArr.includes(j)) {\n                    let gridObj: GridObj = GridData.instance.getGridTiledByIndex(j);\n                    //是否占用\n                    if (gridMapData[gridObj.row][gridObj.col]) {\n                        element.getComponent(GridItem)!.setRed();\n                        //被占用的武器抖动状态\n                        let weaponKey: string = gridMapData[gridObj.row][gridObj.col];\n                        if (!placeWeaponKeyArr.includes(weaponKey)) {\n                            placeWeaponKeyArr.push(weaponKey);\n                        }\n                    }\n                    else {\n                        element.getComponent(GridItem)!.setYellow();\n                    }\n                }\n                else {\n                    element.getComponent(GridItem)!.setDeafult();\n                }\n            }\n        }\n        else {\n            //未超出区域\n            let sanmeCount: number = 0;//相同wid 数量\n            let weaponKey: string = '';\n            for (let j = 0; j < items.length; j++) {\n                const element: Node = items[j];\n                if (gridIndexArr.includes(j)) {\n                    element.getComponent(GridItem)!.setGreen();\n                    //抖动和合成状态\n                    let gridObj: GridObj = GridData.instance.getGridTiledByIndex(j);\n                    weaponKey = gridMapData[gridObj.row][gridObj.col];\n                    //检测武器id是否相同\n                    if (GridData.instance.checkSameWeapoIdByKey(weaponKey, wid)) {\n                        sanmeCount++;\n                    }\n                    //添加到抖动列表\n                    if (!placeWeaponKeyArr.includes(weaponKey)) {\n                        placeWeaponKeyArr.push(weaponKey);\n                    }\n                }\n                else {\n                    element.getComponent(GridItem)!.setDeafult();\n                }\n\n            }\n            //是否达到合成成状态\n            if (sanmeCount == gridIndexArr.length) {\n                //可以合成(是否合成达到最大等级)\n                let level: number = weaponItem.weaponCfg.Level;\n                let group: number = weaponItem.weaponCfg.weaponGroupNum;\n                if (WeaponData.instance.checkWeaponByLevel(level + 1, group)) {\n                    placeWeaponKeyArr = [];\n                    weaponItem.setIconYellow();\n                    game.emit(EventConstant.WEAPON_ICON_STATUS, weaponKey, true);\n                }\n            }\n        }\n        //设置抖动\n        for (let index = 0; index < placeWeaponKeyArr.length; index++) {\n            const element: string = placeWeaponKeyArr[index];\n            game.emit(EventConstant.WEAPON_SHAKE, element);\n        }\n    }\n\n    /* 武器移动 */\n    private onWeaponMove(weaponItem?: WeaponItem) {\n        let weaponKey: string = weaponItem!.weaponKey;\n        let weaponCfg: WeaponModel = weaponItem!.weaponCfg;\n        let Type: string = weaponCfg.Type;\n        let typeArr: string[] = Type.split('_');\n        let row: number = Number(typeArr[0]);\n        let col: number = Number(typeArr[1]);\n        let pointPosArr: Array<Vec3> = [];\n        let points: number[][] = weaponCfg.Points;\n        GridData.instance.deletGridDataByWeaponId(weaponKey);\n        for (let i = 0; i < row; i++) {\n            for (let j = 0; j < col; j++) {\n                if (points[i][j]) {\n                    //如果位置点存在\n                    let gripObj: GridObj = new GridObj();\n                    gripObj.row = i;\n                    gripObj.col = j;\n                    let tieldPos: Vec3 = GridData.instance.getGridPosByTiled(gripObj);\n                    let wpos: Vec3 = weaponItem!.point.getComponent(UITransform)!.convertToWorldSpaceAR(tieldPos);\n                    let pos: Vec3 = weaponItem!.node.parent!.getComponent(UITransform)!.convertToNodeSpaceAR(wpos);\n                    pointPosArr.push(pos);\n                }\n            }\n        }\n        //初始状态\n        game.emit(EventConstant.WEAPON_ICON_STATUS_INIT);\n        this.cherGridStatus(pointPosArr, weaponItem!);\n    }\n\n    protected onEnable(): void {\n        game.on(EventConstant.WEAPON_MOVE, this.onWeaponMove, this);\n        game.on(EventConstant.WEAPON_PlACE, this.initGridStatus, this);\n        game.on(EventConstant.INIT_BUILD_GRID_LIST, this.initGridList, this);\n    }\n\n    protected onDisable(): void {\n        game.off(EventConstant.WEAPON_MOVE, this.onWeaponMove, this);\n        game.off(EventConstant.WEAPON_PlACE, this.initGridStatus, this);\n        game.off(EventConstant.INIT_BUILD_GRID_LIST, this.initGridList, this);\n    }\n\n    public clear() {\n        GridData.instance.clear();\n    }\n}\n\n"]}