{"version":3,"sources":["file:///Users/jhh/Desktop/projects/block_project/block-practice/block/assets/script/block/Data/GridData.ts"],"names":["GridData","WeaponObj","GridObj","_decorator","Templates","ccclass","property","_curGrid","_gridMapData","_bagCfg","_gridRowLen","_gridColLen","_gridWidth","_gredHeight","_space","_gridItemData","Map","_curWeaponTildeIndex","_gridEditMode","gridEditMode","value","iconScale","picture","space","bagCfg","curWeaponTildeIndex","gridWidth","gridHeight","init","initGridMapData","initGridItemData","n","blockGrid","TbBlockGrid","getDataMap","get","privateGrid","map","row","String","expandFactor","getExpandFactor","expandPrivateGrid","privateGridLength","length","oldN","i","addGridItemData","Id","id","name","private_gridLen","privateGridLen","max_gridLen","maxGridLen","private_gridWidth","privateGridWidth","private_gredHeight","private_space","privateSpace","parseInt","private_grid","max_grid","maxGrid","row_col","split","Number","forEach","weaponObj","key","data","gridObj","col","matrix","count","expandMatrix","top","bottom","left","right","m","originalCols","expandedRows","expandedCols","expanded","push","Array","fill","j","addWeaponItem","wid","weaponCfg","WeaponData","instance","getWeaponCfgById","BlockUtil","getUuid","gid","points","Points","element","set","setRebuildGridMapData","weaponKey","getMaxGridMapSize","size","Size","width","height","rowLen","colLen","w","h","getGridMapSize","getGridSizeByRowCol","getGridMapData","getGridItemData","from","values","getGridItemDataKeys","keys","getGridItemMapData","getItemPosByTiledObj","gridObjArr","startPos","getGridPosByTiled","endPos","pos","Vec3","x","y","posX","posY","getGridIndexByTiled","getGridTiledByIndex","index","Math","floor","deletGridDataByWeaponId","has","delete","addGridDataByWeaponId","updateGridItemData","getTiledByPos","tiledX","tiledY","abs","getTiledIndexByPos","checkSameWeapoIdByKey","checkPointinGrid","touchPos","isTouch","rect","Rect","contains","getGridBgIndexByTiled","clear","_instance","toString"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node } from 'cc';\nimport { Templates } from \"../../manager/TemplateMgr\";\nconst { ccclass, property } = _decorator;\n\nexport interface BagModel {\n    ClassName?: string;\n    Id: number;\n    name: string;\n    private_gridLen: string;\n    max_gridLen: string;\n    private_gridWidth: number;\n    private_gredHeight: number;\n    private_space: number;\n    //武器资源缩放大小\n    picture: number;\n    //拥有格子数据\n    private_grid: Array<Array<string>>;\n    //最大格子数据\n    max_grid: Array<Array<string>>;\n}\n\nexport class GridData {\n    private _curGrid = 100;//当前位置表id\n    private _gridMapData: Array<Array<string>> = [['0', '0', '0'], ['0', '0', '0'], ['0', '0', '0']];  //格子地图数据  0:有格子 '':没有格子   value=>武器唯一id\n    private _bagCfg: BagModel = null!;//背包配置数据\n    private _gridRowLen = 3; //格子行长度(每行多少个)\n    private _gridColLen = 3; //格子列长度(每列多少个)\n    private _gridWidth = 94;//格子宽度\n    private _gredHeight = 94;//格子高度\n    private _space = 10;//格子间隔\n    private _gridItemData: Map<string, WeaponObj> = new Map();//携带的武器数据  key=>武器唯一id\n    private _curWeaponTildeIndex: Array<number> = [];//当前武器位置索引\n\n    private _gridEditMode: boolean = false;//是否为格子编辑模式\n\n    public get gridEditMode() {\n        return this._gridEditMode;\n    }\n\n    public set gridEditMode(value: boolean) {\n        this._gridEditMode = value;\n    }\n\n    public get iconScale() {\n        return this._bagCfg.picture;\n    }\n    public get space() {\n        return this._space;\n    }\n\n    public get bagCfg() {\n        return this._bagCfg;\n    }\n\n    public get curWeaponTildeIndex() {\n        return this._curWeaponTildeIndex;\n    }\n\n    public set curWeaponTildeIndex(value: Array<number>) {\n        this._curWeaponTildeIndex = value;\n    }\n\n    public get gridWidth() {\n        return this._gridWidth;\n    }\n\n    public get gridHeight() {\n        return this._gredHeight;\n    }\n\n    public init() {\n        this.initGridMapData();\n        this.initGridItemData();\n    }\n\n    /* 初始化格子数据 */\n    private initGridMapData() {\n        const n = 12;   // TODO: 增加人数\n        const blockGrid = Templates.TbBlockGrid.getDataMap().get(this._curGrid)!;\n        const privateGrid = blockGrid.privateGrid.map(row => row.map(String));\n        const expandFactor = this.getExpandFactor(privateGrid, n);\n        let expandPrivateGrid: string[][] = privateGrid;\n\n        // 动态扩展,逆时针增加\n        let privateGridLength = privateGrid.length;\n        let oldN = 0;\n        for (let i = 0; i < expandFactor - 1; i++) {\n            expandPrivateGrid = this.addGridItemData(privateGrid, (privateGridLength + 2) * 4 - 4);\n            oldN += (privateGridLength + 2) * 4 - 4;\n            privateGridLength++;\n        }\n        expandPrivateGrid = this.addGridItemData(expandPrivateGrid, n - oldN);\n\n        this._bagCfg = {\n            Id: blockGrid.id,\n            name: blockGrid.name,\n            private_gridLen: (blockGrid.privateGridLen[0] + expandFactor * 2) + '_' + (blockGrid.privateGridLen[1] + expandFactor * 2),\n            max_gridLen: blockGrid.maxGridLen[0] + '_' + blockGrid.maxGridLen[1],\n            private_gridWidth: blockGrid.privateGridWidth[0],\n            private_gredHeight: blockGrid.privateGridWidth[1],\n            private_space: blockGrid.privateSpace,\n            picture: parseInt(blockGrid.picture),\n            private_grid: expandPrivateGrid,\n            max_grid: blockGrid.maxGrid.map(row => row.map(String))\n        }\n        let row_col = this._bagCfg.private_gridLen.split('_');\n        this._gridMapData = this._bagCfg.private_grid;\n        this._gridWidth = this._bagCfg.private_gridWidth;\n        this._gredHeight = this._bagCfg.private_gredHeight;\n        this._space = this._bagCfg.private_space;\n        this._gridColLen = Number(row_col[0]);\n        this._gridRowLen = Number(row_col[1]);\n    }\n\n    /* 初始携带的武器数据 */\n    private initGridItemData() {\n        //调试 初始携带武器数据\n        //this.addWeaponItem(1008);\n\n        //初始化地图格子数据\n        this._gridItemData.forEach((weaponObj, key) => {\n            let data = weaponObj.data;\n            for (let i = 0; i < data.length; i++) {\n                const gridObj = data[i];\n                this._gridMapData[gridObj.row][gridObj.col] = key;\n            }\n        })\n        // console.log('携带武器数据', this._gridItemData);\n        // console.log('初始格子数据', this._gridMapData);\n    }\n\n    /** 获取扩展因子 */\n    private getExpandFactor(matrix: string[][], n: number): number {\n        if (n == 0) return 0;\n        let expandFactor = 1; // 扩展因子\n        let count = (2 + matrix.length) * 4 - 4;\n        while (count < n) {\n            expandFactor++;\n            count += (expandFactor * 2 + matrix.length) * 4 - 4;\n        }\n\n        return expandFactor;\n    }\n\n    /**增加角色的背包格子 */\n    private addGridItemData(matrix: string[][], n: number): string[][] {\n        if (n == 0) return matrix;\n        matrix = this.expandMatrix(matrix, 1);\n\n        let top = 0;\n        let bottom = matrix.length - 1;\n        let left = 0;\n        let right = matrix[0].length - 1;\n\n        let count = 0;\n        while (top <= bottom && left <= right) {\n            // 从左到右（底部行）\n            for (let i = left; i <= right; i++) {\n                if (count > 0 && count <= n) {\n                    matrix[bottom][i] = '0';\n                }\n                count++;\n            }\n            bottom--; // 缩小底部边界\n\n            // 从下到上（最右侧列）\n            for (let i = bottom; i >= top && left <= right; i--) {\n                if (count > 0 && count <= n) {\n                    matrix[i][right] = '0';\n                }\n                count++;\n            }\n            right--; // 缩小右侧边界\n\n            // 从右到左（顶部行）\n            for (let i = right; i >= left && top <= bottom; i--) {\n                if (count > 0 && count <= n) {\n                    matrix[top][i] = '0';\n                }\n                count++;\n            }\n            top++; // 缩小顶部边界\n\n            // 从上到下（最左侧列）\n            for (let i = top; i <= bottom && left <= right; i++) {\n                if (count > 0 && count <= n) {\n                    matrix[i][left] = '0';\n                }\n                count++;\n            }\n            left++; // 缩小左侧边界\n        }\n\n        if (n == matrix.length * 4 - 4) {\n            matrix[matrix.length - 1][0] = '0';\n        }\n\n        return matrix;\n    }\n\n    /**扩展二维数组 */\n    private expandMatrix(matrix: string[][], n: number): string[][] {\n        const m = matrix.length;\n        const originalCols = matrix[0].length;\n\n        // 计算扩展后的行列数\n        const expandedRows = m + 2 * n;\n        const expandedCols = originalCols + 2 * n;\n\n        // 创建扩展后的数组，并初始化为 0\n        let expanded: string[][] = [];\n        for (let i = 0; i < expandedRows; i++) {\n            expanded.push(new Array(expandedCols).fill(0));\n        }\n\n        // 将原始数组复制到扩展数组的中心位置\n        for (let i = 0; i < m; i++) {\n            for (let j = 0; j < originalCols; j++) {\n                expanded[i + n][j + n] = matrix[i][j];\n            }\n        }\n\n        // 扩展四周边界\n        for (let i = 0; i < n; i++) {\n            // 上方 n 行\n            for (let j = 0; j < expandedCols; j++) {\n                expanded[i][j] = '';\n            }\n            // 下方 n 行\n            for (let j = 0; j < expandedCols; j++) {\n                expanded[expandedRows - 1 - i][j] = '';\n            }\n        }\n\n        for (let j = 0; j < n; j++) {\n            // 左侧 n 列（包括上下已填充的 n 行）\n            for (let i = 0; i < expandedRows; i++) {\n                expanded[i][j] = '';\n            }\n            // 右侧 n 列（包括上下已填充的 n 行）\n            for (let i = 0; i < expandedRows; i++) {\n                expanded[i][expandedCols - 1 - j] = '';\n            }\n        }\n\n        return expanded;\n    }\n\n    /**\n     * 添加携带的武器id\n     * @param wid \n     */\n    private addWeaponItem(wid: number) {\n        let weaponCfg = WeaponData.instance.getWeaponCfgById(wid);\n        if (weaponCfg == null) {\n            return;\n        }\n        let weaponObj = new WeaponObj();\n        weaponObj.id = BlockUtil.getUuid(10);\n        weaponObj.gid = this._curGrid;\n        weaponObj.wid = wid;\n        let points = weaponCfg.Points;\n        let data: Array<GridObj> = [];\n        for (let i = 0; i < points.length; i++) {\n            const element = points[i];\n            for (let j = 0; j < element.length; j++) {\n                let gridObj = new GridObj();\n                gridObj.row = i;\n                gridObj.col = j;\n                data.push(gridObj);\n            }\n\n        }\n        weaponObj.data = data;\n        this._gridItemData.set(weaponObj.id, weaponObj);\n    }\n\n    /* 设置重组格子数据 */\n    public setRebuildGridMapData(value: Array<Array<string>>) {\n        let row = value.length;\n        let col = value[0].length;\n        this._gridMapData = value;\n        this._bagCfg.private_gridLen = row + '_' + col;\n        this._gridColLen = row;\n        this._gridRowLen = col;\n        //设置武器位置数据\n        this._gridItemData.forEach((weaponObj, key) => {\n            let data: Array<GridObj> = [];\n            for (let i = 0; i < value.length; i++) {\n                const element = value[i];\n                for (let j = 0; j < element.length; j++) {\n                    const weaponKey = element[j];\n                    if (weaponKey == key) {\n                        let gridObj = new GridObj();\n                        gridObj.row = i;\n                        gridObj.col = j;\n                        data.push(gridObj);\n                    }\n                }\n\n            }\n            weaponObj.data = data;\n        })\n    }\n\n    /* 获取最大背包尺寸 */\n    public getMaxGridMapSize() {\n        let size = new Size();\n        let bagCfg = this.bagCfg;\n        let width = bagCfg.private_gridWidth;\n        let height = bagCfg.private_gredHeight;\n        let space = bagCfg.private_space;\n        let row_col = bagCfg.max_gridLen.split('_');\n        let rowLen = Number(row_col[0]);\n        let colLen = Number(row_col[1]);\n        let w = colLen * width + (colLen - 1) * space;\n        let h = rowLen * height + (rowLen - 1) * space;\n        size.width = w;\n        size.height = h;\n        return size;\n    }\n\n    /* 获取背包尺寸 */\n    public getGridMapSize() {\n        let size = new Size();\n        let bagCfg = this.bagCfg;\n        let width = bagCfg.private_gridWidth;\n        let height = bagCfg.private_gredHeight;\n        let space = bagCfg.private_space;\n        let row_col = bagCfg.private_gridLen.split('_');\n        let rowLen = Number(row_col[1]);\n        let colLen = Number(row_col[0]);\n        let w = rowLen * width + (rowLen - 1) * space;\n        let h = colLen * height + (colLen - 1) * space;\n        size.width = w;\n        size.height = h;\n        return size;\n    }\n\n    /**\n     * 通过行列数量获取尺寸\n     * @param rowLen \n     * @param colLen \n     */\n    public getGridSizeByRowCol(rowLen: number, colLen: number) {\n        let size = new Size();\n        let bagCfg = this.bagCfg;\n        let width = bagCfg.private_gridWidth;\n        let height = bagCfg.private_gredHeight;\n        let space = bagCfg.private_space;\n        let w = rowLen * width + (rowLen - 1) * space;\n        let h = colLen * height + (colLen - 1) * space;\n        size.width = w;\n        size.height = h;\n        return size;\n    }\n\n    /* 获取格子数据 */\n    public getGridMapData() {\n        return this._gridMapData;\n    }\n\n    /* 获取携带的武器位置数据 */\n    private getGridItemData() {\n        return Array.from(this._gridItemData.values());\n    }\n\n    /* 获取携带的武器唯一键值 */\n    public getGridItemDataKeys() {\n        return Array.from(this._gridItemData.keys());\n    }\n\n    /*获取携带的武器Map数据  */\n    public getGridItemMapData() {\n        return this._gridItemData;\n    }\n\n    /**\n     * 通过位置组获取位置中点坐标\n     * @param gridObjArr \n     */\n    public getItemPosByTiledObj(gridObjArr: Array<GridObj>) {\n        let startPos = this.getGridPosByTiled(gridObjArr[0]);\n        let endPos = this.getGridPosByTiled(gridObjArr[gridObjArr.length - 1]);\n        let pos = new Vec3(0, 0, 0);\n        pos.x = (startPos.x + endPos.x) / 2;\n        pos.y = (startPos.y + endPos.y) / 2;\n        return pos;\n    }\n\n    /**\n     * 通过位置获取坐标\n     * @param gridObj \n     * @returns \n     */\n    public getGridPosByTiled(gridObj: GridObj) {\n        let posX = gridObj.col * this._gridWidth + this._gridWidth / 2 + gridObj.col * this._space;\n        let posY = gridObj.row * this._gredHeight + this._gredHeight / 2 + gridObj.row * this._space;\n        return new Vec3(posX, -posY);\n    }\n\n    /**\n     * 通过位置获取位置索引\n     * @param row \n     * @param col  \n     */\n    private getGridIndexByTiled(row: number, col: number) {\n        return row * this._gridRowLen + col;\n    }\n\n    /**\n     * 通过位置索引获取位置\n     * @param index \n     */\n    public getGridTiledByIndex(index: number) {\n        let row = Math.floor(index / this._gridRowLen);\n        let col = index % this._gridRowLen;\n        let gridObj = new GridObj();\n        gridObj.row = row;\n        gridObj.col = col;\n        return gridObj;\n    }\n\n    /**\n     * 通过武器唯一id 删除位置数据\n     * @param id   武器唯一id\n     */\n    public deletGridDataByWeaponId(id: string) {\n        if (this._gridItemData.has(id)) {\n            let weaponObj = this._gridItemData.get(id)!;\n            let gridObjArr = weaponObj.data;\n            for (let i = 0; i < gridObjArr.length; i++) {\n                const gridObj = gridObjArr[i];\n                this._gridMapData[gridObj.row][gridObj.col] = '0';\n            }\n            this._gridItemData.delete(id);\n        }\n    }\n\n    /**\n     * 添加放置数据\n     * @param gridObjArr \n     * @param wid \n     */\n    public addGridDataByWeaponId(gridObjArr: Array<GridObj>, wid: number, weaponKey: string) {\n        let weaponObj = new WeaponObj();\n        weaponObj.id = weaponKey;\n        weaponObj.gid = this._curGrid;\n        weaponObj.wid = wid;\n        weaponObj.data = gridObjArr;\n\n        this._gridItemData.set(weaponObj.id, weaponObj);\n        for (let i = 0; i < gridObjArr.length; i++) {\n            const element = gridObjArr[i];\n            this._gridMapData[element.row][element.col] = weaponObj.id;\n        }\n    }\n\n    /* 合成更新 */\n    public updateGridItemData(weaponKey: string, wid: number) {\n        if (this._gridItemData.has(weaponKey)) {\n            let weaponObj = this._gridItemData.get(weaponKey)!;\n            weaponObj.wid = wid;\n        }\n    }\n\n    /**\n     * 通过坐标获取位置\n     * @param pos \n     */\n    private getTiledByPos(pos: Vec3) {\n        let tiledX = pos.x > 0 ? Math.floor((pos.x - this._gridWidth / 2) / (this._gridWidth + this._space)) : 3;\n        let tiledY = pos.y < 0 ? Math.floor((Math.abs(pos.y) - this._gredHeight / 2) / (this._gredHeight + this._space)) : 3;\n        let gridObj = new GridObj();\n        gridObj.row = tiledY;\n        gridObj.col = tiledX;\n        return gridObj;\n    }\n\n    /**\n     * 通过位置获取位置索引\n     * @param pos \n     */\n    private getTiledIndexByPos(pos: Vec3) {\n        let gridObj = this.getTiledByPos(pos);\n        if (gridObj.col < 0 || gridObj.row < 0 || gridObj.col > (this._gridRowLen - 1) || gridObj.row > (this._gridColLen - 1)) {\n            return -1\n        }\n        return this.getGridIndexByTiled(gridObj.row, gridObj.col);\n    }\n\n    /* 检测武器id是否相同 */\n    public checkSameWeapoIdByKey(weaponKey: string, wid: number) {\n        if (this._gridItemData.has(weaponKey)) {\n            let weaponObj = this._gridItemData.get(weaponKey)!;\n            if (wid == weaponObj.wid) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /* 间隔触摸点是否在位置上 */\n    public checkPointinGrid(touchPos: Vec2, gridObjArr: Array<GridObj>) {\n        let isTouch = false;\n        for (let i = 0; i < gridObjArr.length; i++) {\n            const gridObj = gridObjArr[i];\n            let pos = this.getGridPosByTiled(gridObj);\n            let rect = new Rect(pos.x - this._gridWidth / 2, pos.y - this.gridHeight / 2, this.gridWidth, this.gridHeight);\n            if (rect.contains(touchPos)) {\n                isTouch = true;\n                break;\n            }\n        }\n        return isTouch;\n    }\n\n    /**\n    * 通过位置获取位置索引\n    * @param row \n    * @param col \n    */\n    public getGridBgIndexByTiled(row: number, col: number) {\n        let row_col = this._bagCfg.max_gridLen.split('_');\n        return row * Number(row_col[1]) + col;\n    }\n\n    public clear() {\n        this._gridItemData.clear();\n        this._curWeaponTildeIndex = [];\n        this._bagCfg = null!;\n        this._gridEditMode = false;\n    }\n\n    private static _instance: GridData = null!;\n    public static get instance(): GridData {\n        if (!this._instance) {\n            this._instance = new GridData();\n        }\n        return this._instance;\n    }\n\n}\n\nexport class WeaponObj {\n    id: string = '';//唯一id\n    wid: number = 0;//武器id\n    gid: number = 0;//格子表id\n    data: Array<GridObj> = [];//位置数据\n}\n\nexport class GridObj {\n    row: number = 0;//行\n    col: number = 0;//列\n    toString(): string {\n        return `GridObj { row: ${this.row}, col: ${this.col} }`;\n    }\n}\n\n\n"]}