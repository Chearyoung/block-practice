{"version":3,"sources":["file:///Users/wangzhaoye/block-practice/block/assets/script/block/Mgr/GridMapManager.ts"],"names":["GridBgObj","_decorator","Component","Node","UITransform","Layout","Sprite","Vec3","v3","SpriteFrame","UIOpacity","v2","Rect","game","resources","Constants","GridData","GridObj","GridBgItem","WeaponItem","BlockUtil","EventConstant","ccclass","property","GridMapManager","_gridRes","_padding","startPoint","_isTouch","_offfSet","_startPos","_placeStatus","_temPos","_temPoint","_temAddPoint","_mainAreaKey","_addPlaceAreaData","Map","init","initGridRes","initStatPoint","max_gridLenArr","instance","bagCfg","max_gridLen","split","private_gridLenArr","private_gridLen","startRow","Math","floor","Number","startCol","gridObj","row","col","initAllGridRes","space","size","getMaxGridMapSize","gridWidth","allGridList","getComponent","setContentSize","spacingX","spacingY","bg","width","height","paddingTop","paddingBottom","paddingLeft","paddingRight","updateLayout","setPosition","removeWeaponList","i","length","res","sprite","bgs","path","gridPath","load","err","content","console","error","spriteFrame","pos","resNodePos","equals","ZERO","getGridMapSize","rowColArr","gridList","weaponList","preWeaponList","offerY","padding","setNodeOpacity","value","opacity","children","element","setMainPlaceAreaKey","startGridObj","gripObjArr","getGridMapObjArr","items","data","index","subGridObj","griddata","getGridMapData","newGridObj","push","newIndex","getGridBgIndexByTiled","gridBgItem","placeAreaKey","gridValue","gridBgObj","item","set","setAddPlaceAreaKey","weaponBgItem","getPointGridObjArr","weaponCfg","weaponKey","node","delPlaceAreaKey","key","getConnectStatus","row_col","rowLen","colLen","checkAddAreaGridData","isConnected","isConnect","directions","direction","checkObj","emit","ADD_REMOVE_WEAPON_LIST","delete","destroy","rebuildGridData","forEach","gridObjArr","concat","rowMinMax","colMinMax","sort","x","y","newdata","rowData","j","setRebuildGridMapData","INIT_BUILD_GRID_LIST","INIT_BUILD_WEAPON_POS","onPlaceGridStart","active","initAllGridListPlaceValue","gridEditMode","parent","preBg","SHOW_HIDE_PLACE_LIST","getGridPosByTiled","wpos","convertToWorldSpaceAR","newPos","convertToNodeSpaceAR","gridHeight","onPlaceGridMove","initAllGridListTips","firstGridObj","tieldPos","point","checkPos","all_row_col","rect","contains","placeArr","setTipsGreen","includes","startPos","points","Points","n","m","gridObj1","endGridObj","newEndObj","pos1","wpos1","endPos","centePos","clone","onPlaceGridEnd","onPlaceGridFinish","getFirstGridObj","gridMapData","gripObj","gridBg","setTipsDefault","checkAllGridListByPos","setGridMoveTips","onTouchStart","touchPos","gridData","touched","gridPos","gridWpos","getPosition","onTouchMove","onTouchEnd","onTouchCancle","onClearAreaData","clear","onEnable","on","PLACE_GRID_START","PLACE_GRID_MOVE","PLACE_GRID_END","CLEAR_AREA_DATA","PLACE_GRID_FINISH","onDisable","off"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, UITransform, Layout, Sprite, Vec3, Size, v3, SpriteFrame, UIOpacity, Vec2, v2, Rect, tween, game, instantiate, resources } from 'cc';\nimport { Constants } from '../../Constants';\nimport { BagModel, GridData, GridObj } from '../../Data/GridData';\nimport { GridBgItem } from '../Grid/GridBgItem';\nimport { WeaponBgItem } from '../../Weapon/WeaponBgItem';\nimport { WeaponItem } from '../../Weapon/WeaponItem';\n// import { oops } from '../../../../../script-oops/core/Oops';\nimport { BlockUtil } from '../../Util';\nimport { EventConstant } from '../../EventConstant';\nimport { WeaponModel } from '../../Data/WeaponData';\nconst { ccclass, property } = _decorator;\n\n\n@ccclass('GridMapManager')\nexport class GridMapManager extends Component {\n    @property(Node)\n    private bgs: Array<Node> = [];\n    @property(Node)\n    private bg: Node = null!;\n    @property(Node)\n    private gridList: Node = null!;  //拥有格子\n    @property(Node)\n    private allGridList: Node = null!;  //所有格子列表\n    @property(Node)\n    private weaponList: Node = null!;\n    @property(Node)\n    private removeWeaponList: Node = null!;\n    @property(Node)\n    private preWeaponList: Node = null!;\n    @property(Node)\n    private preBg: Node = null!;\n\n    private _gridRes: Array<string> = ['bag1', 'bag1', 'bag3', 'bag5', 'bag5', 'bag6', 'bag6', 'bag7', 'bag7', 'bag8', 'bag8', 'bag9', 'bag']; //背包背景图\n    private _padding: number = 90;//周围内边距距离\n\n    private startPoint: GridObj = null!; //拥有格子gridList \n    private _isTouch: boolean = false;//是否被点击\n    private _offfSet: Vec3 = new Vec3(0, 0, 0);//移动偏移 \n    private _startPos: Vec3 = new Vec3(0, 0, 0);//weaponList初始位置\n    private _placeStatus: boolean = false; //是否正确放置了\n    private _temPos: Vec3 = new Vec3(0, 0, 0);\n    private _temPoint: GridObj = null!;\n    private _temAddPoint: GridObj = null!; //新增格子\n    private _mainAreaKey: string = '1';//原区域key \n\n    private _addPlaceAreaData: Map<string, GridBgObj> = new Map();//新增放置区域数据  key=>placeAreaKey\n\n    public init() {\n        this.initGridRes();\n        this.initStatPoint();\n    }\n\n    /* 初始拥有格子在背景格子中的位置 */\n    private initStatPoint() {\n        let max_gridLenArr: string[] = GridData.instance.bagCfg.max_gridLen.split('_');\n        let private_gridLenArr: string[] = GridData.instance.bagCfg.private_gridLen.split('_');\n        let startRow: number = Math.floor((Number(max_gridLenArr[0]) - Number(private_gridLenArr[0])) / 2);\n        let startCol: number = Math.floor((Number(max_gridLenArr[1]) - Number(private_gridLenArr[1])) / 2);\n        let gridObj: GridObj = new GridObj();\n        gridObj.row = startRow;\n        gridObj.col = startCol;\n        this.startPoint = gridObj;\n    }\n\n    /* 所有格子适配 */\n    private initAllGridRes() {\n        let space: number = GridData.instance.space;\n        let size: Size = GridData.instance.getMaxGridMapSize();\n        let gridWidth: number = GridData.instance.gridWidth;\n        this.allGridList.getComponent(UITransform)!.setContentSize(size);\n        this.allGridList.getComponent(Layout)!.spacingX = space;\n        this.allGridList.getComponent(Layout)!.spacingY = space;\n        this.bg.getComponent(UITransform)!.setContentSize(size.width + this._padding, size.height + this._padding);\n        this.bg.getComponent(Layout)!.paddingTop = this._padding / 2;\n        this.bg.getComponent(Layout)!.paddingBottom = this._padding / 2;\n        this.bg.getComponent(Layout)!.paddingLeft = this._padding / 2;\n        this.bg.getComponent(Layout)!.paddingRight = this._padding / 2;\n        this.allGridList.getComponent(Layout)!.updateLayout(true);\n        this.bg.getComponent(Layout)!.updateLayout(true);\n        this.allGridList.setPosition(-size.width / 2, size.height / 2);\n        this.removeWeaponList.setPosition(0, -size.height / 2 - 100);\n        for (let i = 0; i < this._gridRes.length; i++) {\n            const res: string = this._gridRes[i];\n            let sprite: Sprite = this.bgs[i].getComponent(Sprite)!;\n            let path: string = Constants.gridPath + res + '/spriteFrame';\n            // oops.res.load(path, SpriteFrame, (err: Error | null, content: SpriteFrame) => {\n            //     sprite.spriteFrame = content;\n            //     let pos: Readonly<Vec3> = this.resNodePos(i, size, this._padding, gridWidth);\n            //     if (!pos.equals(Vec3.ZERO)) {\n            //         this.bgs[i].setPosition(pos);\n            //     }\n            // });\n            resources.load(path, SpriteFrame, (err: Error | null, content: SpriteFrame) => {\n                if (err) {\n                    console.error('Failed to load SpriteFrame:', err);\n                    return;\n                }\n            \n                sprite.spriteFrame = content;\n                let pos: Readonly<Vec3> = this.resNodePos(i, size, this._padding, gridWidth);\n                if (!pos.equals(Vec3.ZERO)) {\n                    this.bgs[i].setPosition(pos);\n                }\n            });\n        }\n    }\n\n    private initGridRes() {\n        let space: number = GridData.instance.space;\n        let size: Size = GridData.instance.getGridMapSize();\n        let gridWidth: number = GridData.instance.gridWidth;\n        let bagCfg: BagModel = GridData.instance.bagCfg;\n        let rowColArr: string[] = bagCfg.private_gridLen.split('_');\n        this.gridList.getComponent(UITransform)!.setContentSize(size);\n        this.gridList.getComponent(Layout)!.spacingX = space;\n        this.gridList.getComponent(Layout)!.spacingY = space;\n        this.bg.getComponent(UITransform)!.setContentSize(size.width + this._padding, size.height + this._padding);\n        this.bg.getComponent(Layout)!.paddingTop = this._padding / 2;\n        this.bg.getComponent(Layout)!.paddingBottom = this._padding / 2;\n        this.bg.getComponent(Layout)!.paddingLeft = this._padding / 2;\n        this.bg.getComponent(Layout)!.paddingRight = this._padding / 2;\n        this.gridList.getComponent(Layout)!.updateLayout(true);\n        this.bg.getComponent(Layout)!.updateLayout(true);\n        this.gridList.setPosition(-size.width / 2, size.height / 2);\n        this.weaponList.setPosition(-size.width / 2, size.height / 2)\n        this.preWeaponList.setPosition(-size.width / 2, size.height / 2);\n        this.weaponList.getComponent(UITransform)!.setContentSize(size.width, size.height);\n        this.preWeaponList.getComponent(UITransform)!.setContentSize(size.width, size.height);\n        let offerY: number = Number(rowColArr[0]) > 5 ? 100 : 200;\n        this.removeWeaponList.setPosition(0, -size.height / 2 - offerY);\n        for (let i = 0; i < this._gridRes.length; i++) {\n            const res: string = this._gridRes[i];\n            let sprite: Sprite = this.bgs[i].getComponent(Sprite)!;\n            let path: string = Constants.gridPath + res + '/spriteFrame';\n            // oops.res.load(path, SpriteFrame, (err: Error | null, content: SpriteFrame) => {\n            //     sprite.spriteFrame = content;\n            //     let pos: Readonly<Vec3> = this.resNodePos(i, size, this._padding, gridWidth);\n            //     if (!pos.equals(Vec3.ZERO)) {\n            //         this.bgs[i].setPosition(pos);\n            //     }\n            // });\n            resources.load(path, SpriteFrame, (err: Error | null, content: SpriteFrame) => {\n                if (err) {\n                    console.error('Failed to load SpriteFrame:', err);\n                    return;\n                }\n            \n                sprite.spriteFrame = content;\n                let pos: Readonly<Vec3> = this.resNodePos(i, size, this._padding, gridWidth);\n                if (!pos.equals(Vec3.ZERO)) {\n                    this.bgs[i].setPosition(pos);\n                }\n            });\n        }\n    }\n\n    private resNodePos(i: number, size: Size, padding: number, gridWidth: number) {\n        let pos: Readonly<Vec3> = Vec3.ZERO;\n        switch (i) {\n            case 0:\n                pos = v3(-(size.width - 100) / 2, -size.height / 2 - 10, 0);\n                break;\n            case 1:\n                pos = v3((size.width - 100) / 2, -size.height / 2 - 10, 0);\n                break;\n            case 2:\n                pos = v3(0, size.height / 2 + padding / 2 - padding / 2 / 3, 0);\n                break;\n            case 3:\n                pos = v3(size.width / 2 + padding / 2 / 3, size.height / 2, 0);\n                break;\n            case 4:\n                pos = v3(-(size.width / 2 + padding / 2 / 3), size.height / 2, 0);\n                break;\n            case 5:\n                pos = v3(-(gridWidth / 2 + gridWidth) + 10, size.height / 2 + padding / 2, 0);\n                break;\n            case 6:\n                pos = v3(gridWidth / 2 + gridWidth - 10, size.height / 2 + padding / 2, 0);\n                break;\n            case 7:\n                pos = v3(-size.width / 2 - padding / 4, -size.height / 2 + gridWidth / 2 + padding / 4, 0);\n                break;\n            case 8:\n                pos = v3(size.width / 2 + padding / 4, -size.height / 2 + gridWidth / 2 + padding / 4, 0);\n                break;\n            case 9:\n                pos = v3(-(size.width / 2 + padding / 2 / 3), size.height / 2 - 30, 0);\n                break;\n            case 10:\n                pos = v3((size.width / 2 + padding / 2 / 3), size.height / 2 - 30, 0);\n                break;\n            case 11:\n                pos = v3(0, size.height / 2 - padding / 2 + 20, 0);\n                this.bgs[i].getComponent(UITransform)!.width = size.width;\n                break;\n        }\n\n        return pos;\n    }\n\n\n    /* 设置节点透明度 */\n    private setNodeOpacity(value: number) {\n        this.weaponList.getComponent(UIOpacity)!.opacity = value;\n        for (let i = 0; i < this.removeWeaponList.children.length; i++) {\n            const element: Node = this.removeWeaponList.children[i];\n            if (element.getComponent(WeaponItem)) {\n                element.getComponent(UIOpacity)!.opacity = value;\n            }\n        }\n    }\n\n    /* 设置区域占位key */\n    private setMainPlaceAreaKey(startGridObj: GridObj) {\n        let gripObjArr: GridObj[] = this.getGridMapObjArr();\n        let items: Node[] = this.allGridList.children;\n        let data: Array<GridObj> = [];\n        for (let index = 0; index < gripObjArr.length; index++) {\n            const subGridObj: GridObj = gripObjArr[index];\n            let griddata: string[][] = GridData.instance.getGridMapData();\n            let value: string = griddata[subGridObj.row][subGridObj.col]\n            let row: number = startGridObj.row + subGridObj.row;\n            let col: number = startGridObj.col + subGridObj.col;\n            let newGridObj: GridObj = new GridObj();\n            newGridObj.row = row;\n            newGridObj.col = col;\n            data.push(newGridObj);\n            let newIndex: number = GridData.instance.getGridBgIndexByTiled(row, col);\n            let gridBgItem: Node = items[newIndex];\n            gridBgItem.getComponent(GridBgItem)!.placeAreaKey = this._mainAreaKey;\n            gridBgItem.getComponent(GridBgItem)!.gridValue = value;\n        }\n        let gridBgObj: GridBgObj = new GridBgObj();\n        gridBgObj.item = this.weaponList;\n        gridBgObj.data = data;\n        this._addPlaceAreaData.set(this._mainAreaKey, gridBgObj);\n    }\n\n    /* 设置新增格子区域的占位key */\n    private setAddPlaceAreaKey(weaponBgItem: WeaponBgItem) {\n        let startGridObj: GridObj = this._temAddPoint;\n        let gripObjArr: GridObj[] = this.getPointGridObjArr(weaponBgItem.weaponCfg);\n        let items: Node[] = this.allGridList.children;\n        let data: Array<GridObj> = [];\n        for (let index = 0; index < gripObjArr.length; index++) {\n            const subGridObj: GridObj = gripObjArr[index];\n            let row: number = startGridObj.row + subGridObj.row;\n            let col: number = startGridObj.col + subGridObj.col;\n            let newGridObj: GridObj = new GridObj();\n            newGridObj.row = row;\n            newGridObj.col = col;\n            data.push(newGridObj);\n            let newIndex: number = GridData.instance.getGridBgIndexByTiled(row, col);\n            let gridBgItem: Node = items[newIndex];\n            gridBgItem.getComponent(GridBgItem)!.placeAreaKey = weaponBgItem.weaponKey;\n        }\n        let gridBgObj: GridBgObj = new GridBgObj();\n        gridBgObj.item = weaponBgItem.node;\n        gridBgObj.data = data;\n        this._addPlaceAreaData.set(weaponBgItem.weaponKey, gridBgObj);\n\n    }\n\n    /* 清除区域key 和区域值 */\n    private delPlaceAreaKey(key: string) {\n        let items: Node[] = this.allGridList.children;\n        for (let index = 0; index < items.length; index++) {\n            const gridBgItem: Node = items[index];\n            gridBgItem.getComponent(GridBgItem)!.delPlaceAreaKey(key);\n        }\n    }\n\n    /**获取格子连接状态 */\n    private getConnectStatus(gridObj: GridObj): boolean {\n        let bagCfg: BagModel = GridData.instance.bagCfg;\n        let row_col: string[] = bagCfg.max_gridLen.split('_');\n        let rowLen: number = Number(row_col[0]);\n        let colLen: number = Number(row_col[1]);\n\n        // 边界检查\n        if (gridObj.row < 0 || gridObj.col < 0 || gridObj.row >= rowLen || gridObj.col >= colLen) {\n            return false;\n        }\n\n        // 获取网格在列表中的索引\n        let index = GridData.instance.getGridBgIndexByTiled(gridObj.row, gridObj.col);\n        if (index === -1 || index >= this.allGridList.children.length) {\n            return false;\n        }\n\n        // 获取对应的网格项\n        let item = this.allGridList.children[index];\n        if (!item || !item.getComponent(GridBgItem)) {\n            return false;\n        }\n\n        // 检查是否和主区域相连\n        return item.getComponent(GridBgItem)!.placeAreaKey === this._mainAreaKey;\n    }\n\n    /* 检测新增区域数据是否相连 */\n    private checkAddAreaGridData() {\n        let isConnected: boolean = true; // 默认连接\n        let item: Node = null!;\n        for (let [key, gridBgObj] of this._addPlaceAreaData) {\n            if (key !== this._mainAreaKey) {\n                item = gridBgObj.item;\n                let data: GridObj[] = gridBgObj.data;\n                let isConnect: boolean = false;\n\n                // 定义四个方向的偏移量\n                const directions = [\n                    { row: -1, col: 0 }, // 上\n                    { row: 1, col: 0 },  // 下\n                    { row: 0, col: -1 }, // 左\n                    { row: 0, col: 1 }   // 右\n                ];\n\n                // 检查每个方向上的连接状态\n                for (let direction of directions) {\n                    for (let gridObj of data) {\n                        let checkObj: GridObj = new GridObj();\n                        checkObj.row = gridObj.row + direction.row;\n                        checkObj.col = gridObj.col + direction.col;\n                        if (this.getConnectStatus(checkObj)) {\n                            isConnect = true;\n                            break;\n                        }\n                    }\n                    if (isConnect) {\n                        break;\n                    }\n                }\n\n                if (!isConnect) {   // 只要有一块不连接就不重新调整格子\n                    game.emit(EventConstant.ADD_REMOVE_WEAPON_LIST, item);\n                    this._addPlaceAreaData.delete(key);\n                    this.delPlaceAreaKey(key);\n                    isConnected = false;\n                    break;\n                }\n            }\n        }\n\n        if (isConnected) {\n            item.destroy();\n            this.rebuildGridData();\n        }\n    }\n\n    /* 重组拥有格子数据 */\n    private rebuildGridData() {\n        let data: Array<GridObj> = [];\n        this._addPlaceAreaData.forEach((gridBgObj, key) => {\n            let gridObjArr: GridObj[] = gridBgObj.data;\n            data = data.concat(gridObjArr);\n        })\n        let rowMinMax = [];\n        let colMinMax = [];\n        data.sort((x, y) => { return x.row - y.row });\n        rowMinMax.push(data[0].row);\n        rowMinMax.push(data[data.length - 1].row);\n        data.sort((x, y) => { return x.col - y.col });\n        colMinMax.push(data[0].col);\n        colMinMax.push(data[data.length - 1].col);\n        //重组新格子数据\n        let newdata: Array<Array<string>> = [];\n        let items = this.allGridList.children;\n        for (let i = rowMinMax[0]; i <= rowMinMax[1]; i++) {\n            let rowData = [];\n            for (let j = colMinMax[0]; j <= colMinMax[1]; j++) {\n                let index: number = GridData.instance.getGridBgIndexByTiled(i, j);\n                let gridBgItem: Node = items[index];\n                let value: string = gridBgItem.getComponent(GridBgItem)!.placeAreaKey ? gridBgItem.getComponent(GridBgItem)!.gridValue : '';\n                rowData.push(value);\n            }\n            newdata.push(rowData);\n        }\n        GridData.instance.setRebuildGridMapData(newdata);\n        game.emit(EventConstant.INIT_BUILD_GRID_LIST);\n        game.emit(EventConstant.INIT_BUILD_WEAPON_POS);\n        this.startPoint.row = rowMinMax[0];\n        this.startPoint.col = colMinMax[0];\n    }\n\n    /* 放置新增格子开始 */\n    private onPlaceGridStart(weaponBgItem?: WeaponBgItem) {\n        if (!this.allGridList.active) {\n            this.initAllGridListPlaceValue();\n            GridData.instance.gridEditMode = true;\n            this.gridList.parent = this.preBg;\n            weaponBgItem!.node.parent = this.node;\n            this.allGridList.active = true;\n            //设置透明度\n            this.setNodeOpacity(100);\n            this.initAllGridRes();\n            this.node.parent!.getComponent(UITransform)!.height = this.allGridList.getComponent(UITransform)!.height;\n            game.emit(EventConstant.SHOW_HIDE_PLACE_LIST, true);\n            //设置拥有格子列表位置\n            let pos: Vec3 = GridData.instance.getGridPosByTiled(this.startPoint);\n            let wpos: Vec3 = this.allGridList.getComponent(UITransform)!.convertToWorldSpaceAR(pos);\n            let newPos: Vec3 = this.node.parent!.getComponent(UITransform)!.convertToNodeSpaceAR(wpos);\n            let gridWidth: number = GridData.instance.gridWidth;\n            let gridHeight: number = GridData.instance.gridHeight;\n            this.gridList.setPosition(newPos.x - gridWidth / 2, newPos.y + gridHeight / 2);\n            this.weaponList.setPosition(newPos.x - gridWidth / 2, newPos.y + gridHeight / 2);\n            this.setMainPlaceAreaKey(this.startPoint);\n        }\n        this.delPlaceAreaKey(weaponBgItem!.weaponKey);\n    }\n\n    /* 放置新增格子移动 */\n    private onPlaceGridMove(weaponBgItem?: WeaponBgItem) {\n        weaponBgItem!.node.parent = this.node;\n        this.initAllGridListTips();\n        let firstGridObj: GridObj = new GridObj();\n        firstGridObj.row = 0;\n        firstGridObj.col = 0;\n        let tieldPos: Vec3 = GridData.instance.getGridPosByTiled(firstGridObj);\n        let wpos: Vec3 = weaponBgItem!.point.getComponent(UITransform)!.convertToWorldSpaceAR(tieldPos);\n        let checkPos: Vec3 = this.allGridList.getComponent(UITransform)!.convertToNodeSpaceAR(wpos);\n        let items: Node[] = this.allGridList.children;\n        let all_row_col: string[] = GridData.instance.bagCfg.max_gridLen.split('_');\n        this._placeStatus = false;\n        for (let i = 0; i < items.length; i++) {\n            const element: Node = items[i];\n            let gridObj: GridObj = element.getComponent(GridBgItem)!.gridObj;\n            let pos: Vec3 = GridData.instance.getGridPosByTiled(gridObj);\n            let width: number = GridData.instance.gridWidth;\n            let height: number = GridData.instance.gridHeight;\n            let rect: Rect = new Rect(pos.x - width / 2, pos.y - height / 2, width, height);\n            if (rect.contains(v2(checkPos.x, checkPos.y))) {\n                let gripObjArr: GridObj[] = this.getPointGridObjArr(weaponBgItem!.weaponCfg);\n                let placeArr = [];//0 为未放置\n                for (let index = 0; index < gripObjArr.length; index++) {\n                    const subGridObj: GridObj = gripObjArr[index];\n                    let row: number = gridObj.row + subGridObj.row;\n                    let col: number = gridObj.col + subGridObj.col;\n                    if (row < Number(all_row_col[0]) && col < Number(all_row_col[1])) {\n                        let newIndex = GridData.instance.getGridBgIndexByTiled(row, col);\n                        let gridBgItem = items[newIndex];\n                        //检测格子占用\n                        if (!gridBgItem.getComponent(GridBgItem)!.placeAreaKey) {\n                            gridBgItem.getComponent(GridBgItem)!.setTipsGreen();\n                            placeArr.push(1);\n                        }\n                        else {\n                            placeArr.push(0);\n                        }\n                    }\n                    else {\n                        placeArr.push(0);\n                    }\n                }\n                if (placeArr.includes(0)) {\n                    this._placeStatus = false;\n\n                }\n                else {\n                    this._placeStatus = true;\n                    //设置新坐标\n                    let wpos = this.allGridList.getComponent(UITransform)!.convertToWorldSpaceAR(pos);\n                    let startPos = this.node.parent!.getComponent(UITransform)!.convertToNodeSpaceAR(wpos);\n\n                    let points = weaponBgItem!.weaponCfg.Points;\n                    let data: Array<GridObj> = [];\n                    for (let n = 0; n < points.length; n++) {\n                        const element = points[n];\n                        for (let m = 0; m < element.length; m++) {\n                            let gridObj1 = new GridObj();\n                            gridObj1.row = n;\n                            gridObj1.col = m;\n                            data.push(gridObj1);\n                        }\n                    }\n                    const endGridObj = data[data.length - 1];\n                    let newEndObj = new GridObj();\n                    newEndObj.row = gridObj.row + endGridObj.row;\n                    newEndObj.col = gridObj.col + endGridObj.col;\n                    let pos1 = GridData.instance.getGridPosByTiled(newEndObj);\n                    let wpos1 = this.allGridList.getComponent(UITransform)!.convertToWorldSpaceAR(pos1);\n                    let endPos = this.node.parent!.getComponent(UITransform)!.convertToNodeSpaceAR(wpos1);\n\n                    let centePos = new Vec3(0, 0, 0);\n                    centePos.x = (startPos.x + endPos.x) / 2;\n                    centePos.y = (startPos.y + endPos.y) / 2;\n                    this._temPos = centePos;\n                    this._temAddPoint = BlockUtil.clone(gridObj);\n                }\n                break;\n            }\n        }\n    }\n\n    /* 放置新增格子完成 */\n    private onPlaceGridEnd(weaponBgItem?: WeaponBgItem) {\n        let item = weaponBgItem!.node;\n        this.initAllGridListTips();\n        if (this._placeStatus) {\n            item.setPosition(this._temPos);\n            this.setAddPlaceAreaKey(weaponBgItem!);\n        }\n        else {\n            game.emit(EventConstant.ADD_REMOVE_WEAPON_LIST, item);\n            this._addPlaceAreaData.delete(weaponBgItem!.weaponKey);\n        }\n        this._placeStatus = false;\n    }\n\n    /* 放置格子确定 */\n    private onPlaceGridFinish() {\n        if (this.allGridList.active) {\n            this.checkAddAreaGridData();\n            GridData.instance.gridEditMode = false;\n            this.allGridList.active = false;\n            this.gridList.parent = this.bg;\n            //设置透明度\n            this.setNodeOpacity(255);\n            this.initGridRes();\n            game.emit(EventConstant.SHOW_HIDE_PLACE_LIST, false);\n        }\n    }\n\n    /* 获取拥有格子里的第一个有格子的数据 */\n    private getFirstGridObj() {\n        let gridMapData = GridData.instance.getGridMapData();\n        let gripObjArr: Array<GridObj> = [];\n        let gripObj = null;\n        for (let i = 0; i < gridMapData.length; i++) {\n            const element = gridMapData[i];\n            for (let j = 0; j < element.length; j++) {\n                const value = element[j];\n                if (value) {\n                    gripObj = new GridObj();\n                    gripObj.row = i;\n                    gripObj.col = j;\n                    break;\n                }\n            }\n            if (gripObj) {\n                break;\n            }\n        }\n        return gripObj;\n    }\n\n    /* 获取拥有格子的位置数据 */\n    private getGridMapObjArr() {\n        let gridMapData = GridData.instance.getGridMapData();\n        let gripObjArr: Array<GridObj> = [];\n        for (let i = 0; i < gridMapData.length; i++) {\n            const element = gridMapData[i];\n            for (let j = 0; j < element.length; j++) {\n                const value = element[j];\n                if (value) {\n                    let gripObj = new GridObj();\n                    gripObj.row = i;\n                    gripObj.col = j;\n                    gripObjArr.push(gripObj);\n                }\n            }\n        }\n        return gripObjArr;\n    }\n\n    private getPointGridObjArr(weaponCfg: WeaponModel) {\n        let point = weaponCfg.Points;\n        let gripObjArr: Array<GridObj> = [];\n        for (let i = 0; i < point.length; i++) {\n            const element = point[i];\n            for (let j = 0; j < element.length; j++) {\n                const value = element[j];\n                if (value) {\n                    let gripObj = new GridObj();\n                    gripObj.row = i;\n                    gripObj.col = j;\n                    gripObjArr.push(gripObj);\n                }\n            }\n        }\n        return gripObjArr;\n    }\n\n    /* 初始格子颜色 */\n    private initAllGridListTips() {\n        let items = this.allGridList.children;\n        for (let index = 0; index < items.length; index++) {\n            const gridBg = items[index];\n            gridBg.getComponent(GridBgItem)!.setTipsDefault();\n        }\n    }\n\n    /* 初始格子占有 */\n    private initAllGridListPlaceValue() {\n        let items = this.allGridList.children;\n        for (let index = 0; index < items.length; index++) {\n            const gridBg = items[index];\n            gridBg.getComponent(GridBgItem)!.placeAreaKey = '';\n        }\n    }\n\n    /* 检测坐标是否在格子中 */\n    private checkAllGridListByPos(checkPos: Vec3) {\n        let items = this.allGridList.children;\n        let all_row_col = GridData.instance.bagCfg.max_gridLen.split('_');\n        this._placeStatus = false;\n        for (let i = 0; i < items.length; i++) {\n            const element = items[i];\n            let gridObj = element.getComponent(GridBgItem)!.gridObj;\n            let pos = GridData.instance.getGridPosByTiled(gridObj);\n            let width = GridData.instance.gridWidth;\n            let height = GridData.instance.gridHeight;\n            let rect = new Rect(pos.x - width / 2, pos.y - height / 2, width, height);\n            if (rect.contains(v2(checkPos.x, checkPos.y))) {\n                let gripObjArr = this.getGridMapObjArr();\n                let placeArr = [];//0 为未放置\n                for (let index = 0; index < gripObjArr.length; index++) {\n                    const subGridObj = gripObjArr[index];\n                    let row = gridObj.row + subGridObj.row;\n                    let col = gridObj.col + subGridObj.col;\n                    if (row < Number(all_row_col[0]) && col < Number(all_row_col[1])) {\n                        let newIndex = GridData.instance.getGridBgIndexByTiled(row, col);\n                        let gridBgItem = items[newIndex];\n                        //是否格子占用\n                        if (!gridBgItem.getComponent(GridBgItem)!.placeAreaKey) {\n                            gridBgItem.getComponent(GridBgItem)!.setTipsGreen();\n                            placeArr.push(1);\n                        }\n                        else {\n                            placeArr.push(0);\n                        }\n                    }\n                    else {\n                        placeArr.push(0);\n                    }\n                }\n                if (placeArr.includes(0)) {\n                    this._placeStatus = false;\n                }\n                else {\n                    this._placeStatus = true;\n                    let wpos = this.allGridList.getComponent(UITransform)!.convertToWorldSpaceAR(pos);\n                    let newPos = this.node.parent!.getComponent(UITransform)!.convertToNodeSpaceAR(wpos);\n                    let gridWidth = GridData.instance.gridWidth;\n                    let gridHeight = GridData.instance.gridHeight;\n                    this._temPos.x = newPos.x - gridWidth / 2;\n                    this._temPos.y = newPos.y + gridHeight / 2;\n                    this._temPoint = BlockUtil.clone(gridObj);\n                }\n                break;\n            }\n        }\n    }\n\n    /* 设置移动提示 */\n    private setGridMoveTips() {\n\n        this.initAllGridListTips();\n        //检测第一个格子是否在所有格子里中\n        let firstGridObj = new GridObj();\n        firstGridObj.row = 0;\n        firstGridObj.col = 0;\n        let tieldPos = GridData.instance.getGridPosByTiled(firstGridObj);\n        let wpos = this.gridList.getComponent(UITransform)!.convertToWorldSpaceAR(tieldPos);\n        let pos = this.allGridList.getComponent(UITransform)!.convertToNodeSpaceAR(wpos);\n        this.checkAllGridListByPos(pos);\n    }\n\n    /**放置已拥有的格子移动,暂时功能需求不需要 */\n    /*放置拥有格子触摸点击 */\n    private onTouchStart(wpos?: Vec2) {\n        //是否触摸到拥有格子列表\n        let touchPos = this.node.parent!.getComponent(UITransform)!.convertToNodeSpaceAR(new Vec3(wpos!.x, wpos!.y, 0));\n        //坐标在可用格子中时\n        let gridData = GridData.instance.getGridMapData();\n        let touched = false;\n        for (let i = 0; i < gridData.length; i++) {\n            const element = gridData[i];\n            for (let j = 0; j < element.length; j++) {\n                const value = element[j];\n                if (value) {\n                    let gridObj = new GridObj();\n                    gridObj.row = i;\n                    gridObj.col = j;\n                    let gridPos = GridData.instance.getGridPosByTiled(gridObj);\n                    let gridWpos = this.gridList.getComponent(UITransform)!.convertToWorldSpaceAR(gridPos);\n                    let newPos = this.node.parent!.getComponent(UITransform)!.convertToNodeSpaceAR(gridWpos);\n                    let gridWidth = GridData.instance.gridWidth;\n                    let gridHeight = GridData.instance.gridHeight;\n                    let rect = new Rect(newPos.x - gridWidth / 2, newPos.y - gridHeight / 2, gridWidth, gridWidth);\n                    if (rect.contains(v2(touchPos.x, touchPos.y))) {\n                        touched = true;\n                        break;\n                    }\n                }\n            }\n            if (touched) {\n                break;\n            }\n        }\n\n        if (GridData.instance.gridEditMode && touched) {\n            this._isTouch = true;\n            this._offfSet = this.weaponList.getComponent(UITransform)!.convertToNodeSpaceAR(new Vec3(wpos!.x, wpos!.y, 0));\n            this._startPos = this.weaponList.getPosition();\n            this.delPlaceAreaKey(this._mainAreaKey);\n        }\n    }\n    /* 放置拥有格子移动 */\n    private onTouchMove(wpos?: Vec2) {\n        if (this._isTouch) {\n            let touchPos = this.node.parent!.getComponent(UITransform)!.convertToNodeSpaceAR(new Vec3(wpos!.x, wpos!.y, 0));\n            let pos = new Vec3(touchPos.x - this._offfSet.x, touchPos.y - this._offfSet.y);\n            this.gridList.setPosition(pos);\n            this.weaponList.setPosition(pos);\n            //设置移动提示\n            this.setGridMoveTips();\n        }\n    }\n    /* 放置拥有格子完成 */\n    private onTouchEnd(wpos?: Vec2) {\n        if (this._isTouch) {\n            this._isTouch = false;\n            //是否放置或还原\n            if (this._placeStatus) {\n                this._startPos = this._temPos;\n                this.startPoint = this._temPoint;\n            }\n            this.gridList.setPosition(this._startPos);\n            this.weaponList.setPosition(this._startPos);\n            this._placeStatus = false;\n            this.initAllGridListTips();\n            this.setMainPlaceAreaKey(this.startPoint);\n        }\n    }\n    private onTouchCancle(wpos: Vec2) {\n        if (this._isTouch) {\n            this._isTouch = false;\n            this._placeStatus = false;\n            this.gridList.setPosition(this._startPos);\n            this.weaponList.setPosition(this._startPos);\n            this.initAllGridListTips();\n        }\n    }\n\n    private onClearAreaData() {\n        this._addPlaceAreaData.clear();\n    }\n\n    protected onEnable(): void {\n        //放置新增格子监听\n        game.on(EventConstant.PLACE_GRID_START, this.onPlaceGridStart, this);\n        game.on(EventConstant.PLACE_GRID_MOVE, this.onPlaceGridMove, this);\n        game.on(EventConstant.PLACE_GRID_END, this.onPlaceGridEnd, this);\n\n\n        //放置拥有格子监听\n        // game.on(EventConstant.GAME_TOUCH_START, this.onTouchStart, this);\n        // game.on(EventConstant.GAME_TOUCH_MOVE, this.onTouchMove, this);\n        // game.on(EventConstant.GAME_TOUCH_END, this.onTouchEnd, this);\n        // game.on(EventConstant.GAME_TOUCH_CANCLE, this.onTouchEnd, this);\n\n        game.on(EventConstant.CLEAR_AREA_DATA, this.onClearAreaData, this);\n        game.on(EventConstant.PLACE_GRID_FINISH, this.onPlaceGridFinish, this);\n\n    }\n\n    protected onDisable(): void {\n        game.off(EventConstant.PLACE_GRID_START, this.onPlaceGridStart, this);\n        game.off(EventConstant.PLACE_GRID_MOVE, this.onPlaceGridMove, this);\n        game.off(EventConstant.PLACE_GRID_END, this.onPlaceGridEnd, this);\n\n        // game.off(EventConstant.GAME_TOUCH_START, this.onTouchStart, this);\n        // game.off(EventConstant.GAME_TOUCH_MOVE, this.onTouchMove, this);\n        // game.off(EventConstant.GAME_TOUCH_END, this.onTouchEnd, this);\n        // game.off(EventConstant.GAME_TOUCH_CANCLE, this.onTouchEnd, this);\n\n        game.off(EventConstant.CLEAR_AREA_DATA, this.onClearAreaData, this);\n        game.off(EventConstant.PLACE_GRID_FINISH, this.onPlaceGridFinish, this);\n    }\n}\n\nexport class GridBgObj {\n    data: Array<GridObj> = [];//位置数据\n    item: Node = null!;//区域节点\n}\n\n"]}