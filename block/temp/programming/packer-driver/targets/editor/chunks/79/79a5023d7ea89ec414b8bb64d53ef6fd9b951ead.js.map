{"version":3,"sources":["file:///Users/wangzhaoye/block-practice/block/assets/script/Data/GridData.ts"],"names":["GridData","WeaponObj","GridObj","Rect","Size","Vec3","WeaponData","Templates","BlockUtil","_curGrid","_gridMapData","_bagCfg","_gridRowLen","_gridColLen","_gridWidth","_gredHeight","_space","_gridItemData","Map","_curWeaponTildeIndex","_gridEditMode","gridEditMode","value","iconScale","picture","space","bagCfg","curWeaponTildeIndex","gridWidth","gridHeight","init","initGridMapData","initGridItemData","n","blockGrid","TbBlockGrid","getDataMap","get","privateGrid","map","row","String","expandFactor","getExpandFactor","expandPrivateGrid","privateGridLength","length","oldN","i","addGridItemData","Id","id","name","private_gridLen","privateGridLen","max_gridLen","maxGridLen","private_gridWidth","privateGridWidth","private_gredHeight","private_space","privateSpace","parseInt","private_grid","max_grid","maxGrid","row_col","split","Number","forEach","weaponObj","key","data","gridObj","col","matrix","count","expandMatrix","top","bottom","left","right","m","originalCols","expandedRows","expandedCols","expanded","push","Array","fill","j","addWeaponItem","wid","weaponCfg","instance","getWeaponCfgById","getUuid","gid","points","Points","element","set","setRebuildGridMapData","weaponKey","getMaxGridMapSize","size","width","height","rowLen","colLen","w","h","getGridMapSize","getGridSizeByRowCol","getGridMapData","getGridItemData","from","values","getGridItemDataKeys","keys","getGridItemMapData","getItemPosByTiledObj","gridObjArr","startPos","getGridPosByTiled","endPos","pos","x","y","posX","posY","getGridIndexByTiled","getGridTiledByIndex","index","Math","floor","deletGridDataByWeaponId","has","delete","addGridDataByWeaponId","updateGridItemData","getTiledByPos","tiledX","tiledY","abs","getTiledIndexByPos","checkSameWeapoIdByKey","checkPointinGrid","touchPos","isTouch","rect","contains","getGridBgIndexByTiled","clear","_instance","toString"],"mappings":"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","sourcesContent":["import { Rect, Size, Vec2, Vec3 } from \"cc\";\r\nimport { WeaponData } from \"./WeaponData\";\r\nimport { Templates } from \"../Mgr/TemplateMgr\";\r\nimport { BlockUtil } from \"../Util\";\r\n\r\nexport interface BagModel {\r\n    ClassName?: string;\r\n    Id: number;\r\n    name: string;\r\n    private_gridLen: string;\r\n    max_gridLen: string;\r\n    private_gridWidth: number;\r\n    private_gredHeight: number;\r\n    private_space: number;\r\n    //武器资源缩放大小\r\n    picture: number;\r\n    //拥有格子数据\r\n    private_grid: Array<Array<string>>;\r\n    //最大格子数据\r\n    max_grid: Array<Array<string>>;\r\n}\r\n\r\nexport class GridData {\r\n    private _curGrid = 100;//当前位置表id\r\n    private _gridMapData: Array<Array<string>> = [['0', '0', '0'], ['0', '0', '0'], ['0', '0', '0']];  //格子地图数据  0:有格子 '':没有格子   value=>武器唯一id\r\n    private _bagCfg: BagModel = null!;//背包配置数据\r\n    private _gridRowLen = 3; //格子行长度(每行多少个)\r\n    private _gridColLen = 3; //格子列长度(每列多少个)\r\n    private _gridWidth = 94;//格子宽度\r\n    private _gredHeight = 94;//格子高度\r\n    private _space = 10;//格子间隔\r\n    private _gridItemData: Map<string, WeaponObj> = new Map();//携带的武器数据  key=>武器唯一id\r\n    private _curWeaponTildeIndex: Array<number> = [];//当前武器位置索引\r\n\r\n    private _gridEditMode: boolean = false;//是否为格子编辑模式\r\n\r\n    public get gridEditMode() {\r\n        return this._gridEditMode;\r\n    }\r\n\r\n    public set gridEditMode(value: boolean) {\r\n        this._gridEditMode = value;\r\n    }\r\n\r\n    public get iconScale() {\r\n        return this._bagCfg.picture;\r\n    }\r\n    public get space() {\r\n        return this._space;\r\n    }\r\n\r\n    public get bagCfg() {\r\n        return this._bagCfg;\r\n    }\r\n\r\n    public get curWeaponTildeIndex() {\r\n        return this._curWeaponTildeIndex;\r\n    }\r\n\r\n    public set curWeaponTildeIndex(value: Array<number>) {\r\n        this._curWeaponTildeIndex = value;\r\n    }\r\n\r\n    public get gridWidth() {\r\n        return this._gridWidth;\r\n    }\r\n\r\n    public get gridHeight() {\r\n        return this._gredHeight;\r\n    }\r\n\r\n    public init() {\r\n        this.initGridMapData();\r\n        this.initGridItemData();\r\n    }\r\n\r\n    /* 初始化格子数据 */\r\n    private initGridMapData() {\r\n        const n = 12;   // TODO: 增加人数\r\n        const blockGrid = Templates.TbBlockGrid.getDataMap().get(this._curGrid);\r\n        const privateGrid = blockGrid.privateGrid.map(row => row.map(String));\r\n        const expandFactor = this.getExpandFactor(privateGrid, n);\r\n        let expandPrivateGrid: string[][] = privateGrid;\r\n\r\n        // 动态扩展,逆时针增加\r\n        let privateGridLength = privateGrid.length;\r\n        let oldN = 0;\r\n        for (let i = 0; i < expandFactor - 1; i++) {\r\n            expandPrivateGrid = this.addGridItemData(privateGrid, (privateGridLength + 2) * 4 - 4);\r\n            oldN += (privateGridLength + 2) * 4 - 4;\r\n            privateGridLength++;\r\n        }\r\n        expandPrivateGrid = this.addGridItemData(expandPrivateGrid, n - oldN);\r\n\r\n        this._bagCfg = {\r\n            Id: blockGrid.id,\r\n            name: blockGrid.name,\r\n            private_gridLen: (blockGrid.privateGridLen[0] + expandFactor * 2) + '_' + (blockGrid.privateGridLen[1] + expandFactor * 2),\r\n            max_gridLen: blockGrid.maxGridLen[0] + '_' + blockGrid.maxGridLen[1],\r\n            private_gridWidth: blockGrid.privateGridWidth[0],\r\n            private_gredHeight: blockGrid.privateGridWidth[1],\r\n            private_space: blockGrid.privateSpace,\r\n            picture: parseInt(blockGrid.picture),\r\n            private_grid: expandPrivateGrid,\r\n            max_grid: blockGrid.maxGrid.map(row => row.map(String))\r\n        }\r\n        let row_col = this._bagCfg.private_gridLen.split('_');\r\n        this._gridMapData = this._bagCfg.private_grid;\r\n        this._gridWidth = this._bagCfg.private_gridWidth;\r\n        this._gredHeight = this._bagCfg.private_gredHeight;\r\n        this._space = this._bagCfg.private_space;\r\n        this._gridColLen = Number(row_col[0]);\r\n        this._gridRowLen = Number(row_col[1]);\r\n    }\r\n\r\n    /* 初始携带的武器数据 */\r\n    private initGridItemData() {\r\n        //调试 初始携带武器数据\r\n        //this.addWeaponItem(1008);\r\n\r\n        //初始化地图格子数据\r\n        this._gridItemData.forEach((weaponObj, key) => {\r\n            let data = weaponObj.data;\r\n            for (let i = 0; i < data.length; i++) {\r\n                const gridObj = data[i];\r\n                this._gridMapData[gridObj.row][gridObj.col] = key;\r\n            }\r\n        })\r\n        // console.log('携带武器数据', this._gridItemData);\r\n        // console.log('初始格子数据', this._gridMapData);\r\n    }\r\n\r\n    /** 获取扩展因子 */\r\n    private getExpandFactor(matrix: string[][], n: number): number {\r\n        if (n == 0) return 0;\r\n        let expandFactor = 1; // 扩展因子\r\n        let count = (2 + matrix.length) * 4 - 4;\r\n        while (count < n) {\r\n            expandFactor++;\r\n            count += (expandFactor * 2 + matrix.length) * 4 - 4;\r\n        }\r\n\r\n        return expandFactor;\r\n    }\r\n\r\n    /**增加角色的背包格子 */\r\n    private addGridItemData(matrix: string[][], n: number): string[][] {\r\n        if (n == 0) return matrix;\r\n        matrix = this.expandMatrix(matrix, 1);\r\n\r\n        let top = 0;\r\n        let bottom = matrix.length - 1;\r\n        let left = 0;\r\n        let right = matrix[0].length - 1;\r\n\r\n        let count = 0;\r\n        while (top <= bottom && left <= right) {\r\n            // 从左到右（底部行）\r\n            for (let i = left; i <= right; i++) {\r\n                if (count > 0 && count <= n) {\r\n                    matrix[bottom][i] = '0';\r\n                }\r\n                count++;\r\n            }\r\n            bottom--; // 缩小底部边界\r\n\r\n            // 从下到上（最右侧列）\r\n            for (let i = bottom; i >= top && left <= right; i--) {\r\n                if (count > 0 && count <= n) {\r\n                    matrix[i][right] = '0';\r\n                }\r\n                count++;\r\n            }\r\n            right--; // 缩小右侧边界\r\n\r\n            // 从右到左（顶部行）\r\n            for (let i = right; i >= left && top <= bottom; i--) {\r\n                if (count > 0 && count <= n) {\r\n                    matrix[top][i] = '0';\r\n                }\r\n                count++;\r\n            }\r\n            top++; // 缩小顶部边界\r\n\r\n            // 从上到下（最左侧列）\r\n            for (let i = top; i <= bottom && left <= right; i++) {\r\n                if (count > 0 && count <= n) {\r\n                    matrix[i][left] = '0';\r\n                }\r\n                count++;\r\n            }\r\n            left++; // 缩小左侧边界\r\n        }\r\n\r\n        if (n == matrix.length * 4 - 4) {\r\n            matrix[matrix.length - 1][0] = '0';\r\n        }\r\n\r\n        return matrix;\r\n    }\r\n\r\n    /**扩展二维数组 */\r\n    private expandMatrix(matrix: string[][], n: number): string[][] {\r\n        const m = matrix.length;\r\n        const originalCols = matrix[0].length;\r\n\r\n        // 计算扩展后的行列数\r\n        const expandedRows = m + 2 * n;\r\n        const expandedCols = originalCols + 2 * n;\r\n\r\n        // 创建扩展后的数组，并初始化为 0\r\n        let expanded: string[][] = [];\r\n        for (let i = 0; i < expandedRows; i++) {\r\n            expanded.push(new Array(expandedCols).fill(0));\r\n        }\r\n\r\n        // 将原始数组复制到扩展数组的中心位置\r\n        for (let i = 0; i < m; i++) {\r\n            for (let j = 0; j < originalCols; j++) {\r\n                expanded[i + n][j + n] = matrix[i][j];\r\n            }\r\n        }\r\n\r\n        // 扩展四周边界\r\n        for (let i = 0; i < n; i++) {\r\n            // 上方 n 行\r\n            for (let j = 0; j < expandedCols; j++) {\r\n                expanded[i][j] = '';\r\n            }\r\n            // 下方 n 行\r\n            for (let j = 0; j < expandedCols; j++) {\r\n                expanded[expandedRows - 1 - i][j] = '';\r\n            }\r\n        }\r\n\r\n        for (let j = 0; j < n; j++) {\r\n            // 左侧 n 列（包括上下已填充的 n 行）\r\n            for (let i = 0; i < expandedRows; i++) {\r\n                expanded[i][j] = '';\r\n            }\r\n            // 右侧 n 列（包括上下已填充的 n 行）\r\n            for (let i = 0; i < expandedRows; i++) {\r\n                expanded[i][expandedCols - 1 - j] = '';\r\n            }\r\n        }\r\n\r\n        return expanded;\r\n    }\r\n\r\n    /**\r\n     * 添加携带的武器id\r\n     * @param wid \r\n     */\r\n    private addWeaponItem(wid: number) {\r\n        let weaponCfg = WeaponData.instance.getWeaponCfgById(wid);\r\n        if (weaponCfg == null) {\r\n            return;\r\n        }\r\n        let weaponObj = new WeaponObj();\r\n        weaponObj.id = BlockUtil.getUuid(10);\r\n        weaponObj.gid = this._curGrid;\r\n        weaponObj.wid = wid;\r\n        let points = weaponCfg.Points;\r\n        let data: Array<GridObj> = [];\r\n        for (let i = 0; i < points.length; i++) {\r\n            const element = points[i];\r\n            for (let j = 0; j < element.length; j++) {\r\n                let gridObj = new GridObj();\r\n                gridObj.row = i;\r\n                gridObj.col = j;\r\n                data.push(gridObj);\r\n            }\r\n\r\n        }\r\n        weaponObj.data = data;\r\n        this._gridItemData.set(weaponObj.id, weaponObj);\r\n    }\r\n\r\n    /* 设置重组格子数据 */\r\n    public setRebuildGridMapData(value: Array<Array<string>>) {\r\n        let row = value.length;\r\n        let col = value[0].length;\r\n        this._gridMapData = value;\r\n        this._bagCfg.private_gridLen = row + '_' + col;\r\n        this._gridColLen = row;\r\n        this._gridRowLen = col;\r\n        //设置武器位置数据\r\n        this._gridItemData.forEach((weaponObj, key) => {\r\n            let data: Array<GridObj> = [];\r\n            for (let i = 0; i < value.length; i++) {\r\n                const element = value[i];\r\n                for (let j = 0; j < element.length; j++) {\r\n                    const weaponKey = element[j];\r\n                    if (weaponKey == key) {\r\n                        let gridObj = new GridObj();\r\n                        gridObj.row = i;\r\n                        gridObj.col = j;\r\n                        data.push(gridObj);\r\n                    }\r\n                }\r\n\r\n            }\r\n            weaponObj.data = data;\r\n        })\r\n    }\r\n\r\n    /* 获取最大背包尺寸 */\r\n    public getMaxGridMapSize() {\r\n        let size = new Size();\r\n        let bagCfg = this.bagCfg;\r\n        let width = bagCfg.private_gridWidth;\r\n        let height = bagCfg.private_gredHeight;\r\n        let space = bagCfg.private_space;\r\n        let row_col = bagCfg.max_gridLen.split('_');\r\n        let rowLen = Number(row_col[0]);\r\n        let colLen = Number(row_col[1]);\r\n        let w = colLen * width + (colLen - 1) * space;\r\n        let h = rowLen * height + (rowLen - 1) * space;\r\n        size.width = w;\r\n        size.height = h;\r\n        return size;\r\n    }\r\n\r\n    /* 获取背包尺寸 */\r\n    public getGridMapSize() {\r\n        let size = new Size();\r\n        let bagCfg = this.bagCfg;\r\n        let width = bagCfg.private_gridWidth;\r\n        let height = bagCfg.private_gredHeight;\r\n        let space = bagCfg.private_space;\r\n        let row_col = bagCfg.private_gridLen.split('_');\r\n        let rowLen = Number(row_col[1]);\r\n        let colLen = Number(row_col[0]);\r\n        let w = rowLen * width + (rowLen - 1) * space;\r\n        let h = colLen * height + (colLen - 1) * space;\r\n        size.width = w;\r\n        size.height = h;\r\n        return size;\r\n    }\r\n\r\n    /**\r\n     * 通过行列数量获取尺寸\r\n     * @param rowLen \r\n     * @param colLen \r\n     */\r\n    public getGridSizeByRowCol(rowLen: number, colLen: number) {\r\n        let size = new Size();\r\n        let bagCfg = this.bagCfg;\r\n        let width = bagCfg.private_gridWidth;\r\n        let height = bagCfg.private_gredHeight;\r\n        let space = bagCfg.private_space;\r\n        let w = rowLen * width + (rowLen - 1) * space;\r\n        let h = colLen * height + (colLen - 1) * space;\r\n        size.width = w;\r\n        size.height = h;\r\n        return size;\r\n    }\r\n\r\n    /* 获取格子数据 */\r\n    public getGridMapData() {\r\n        return this._gridMapData;\r\n    }\r\n\r\n    /* 获取携带的武器位置数据 */\r\n    private getGridItemData() {\r\n        return Array.from(this._gridItemData.values());\r\n    }\r\n\r\n    /* 获取携带的武器唯一键值 */\r\n    public getGridItemDataKeys() {\r\n        return Array.from(this._gridItemData.keys());\r\n    }\r\n\r\n    /*获取携带的武器Map数据  */\r\n    public getGridItemMapData() {\r\n        return this._gridItemData;\r\n    }\r\n\r\n    /**\r\n     * 通过位置组获取位置中点坐标\r\n     * @param gridObjArr \r\n     */\r\n    public getItemPosByTiledObj(gridObjArr: Array<GridObj>) {\r\n        let startPos = this.getGridPosByTiled(gridObjArr[0]);\r\n        let endPos = this.getGridPosByTiled(gridObjArr[gridObjArr.length - 1]);\r\n        let pos = new Vec3(0, 0, 0);\r\n        pos.x = (startPos.x + endPos.x) / 2;\r\n        pos.y = (startPos.y + endPos.y) / 2;\r\n        return pos;\r\n    }\r\n\r\n    /**\r\n     * 通过位置获取坐标\r\n     * @param gridObj \r\n     * @returns \r\n     */\r\n    public getGridPosByTiled(gridObj: GridObj) {\r\n        let posX = gridObj.col * this._gridWidth + this._gridWidth / 2 + gridObj.col * this._space;\r\n        let posY = gridObj.row * this._gredHeight + this._gredHeight / 2 + gridObj.row * this._space;\r\n        return new Vec3(posX, -posY);\r\n    }\r\n\r\n    /**\r\n     * 通过位置获取位置索引\r\n     * @param row \r\n     * @param col  \r\n     */\r\n    private getGridIndexByTiled(row: number, col: number) {\r\n        return row * this._gridRowLen + col;\r\n    }\r\n\r\n    /**\r\n     * 通过位置索引获取位置\r\n     * @param index \r\n     */\r\n    public getGridTiledByIndex(index: number) {\r\n        let row = Math.floor(index / this._gridRowLen);\r\n        let col = index % this._gridRowLen;\r\n        let gridObj = new GridObj();\r\n        gridObj.row = row;\r\n        gridObj.col = col;\r\n        return gridObj;\r\n    }\r\n\r\n    /**\r\n     * 通过武器唯一id 删除位置数据\r\n     * @param id   武器唯一id\r\n     */\r\n    public deletGridDataByWeaponId(id: string) {\r\n        if (this._gridItemData.has(id)) {\r\n            let weaponObj = this._gridItemData.get(id)!;\r\n            let gridObjArr = weaponObj.data;\r\n            for (let i = 0; i < gridObjArr.length; i++) {\r\n                const gridObj = gridObjArr[i];\r\n                this._gridMapData[gridObj.row][gridObj.col] = '0';\r\n            }\r\n            this._gridItemData.delete(id);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 添加放置数据\r\n     * @param gridObjArr \r\n     * @param wid \r\n     */\r\n    public addGridDataByWeaponId(gridObjArr: Array<GridObj>, wid: number, weaponKey: string) {\r\n        let weaponObj = new WeaponObj();\r\n        weaponObj.id = weaponKey;\r\n        weaponObj.gid = this._curGrid;\r\n        weaponObj.wid = wid;\r\n        weaponObj.data = gridObjArr;\r\n\r\n        this._gridItemData.set(weaponObj.id, weaponObj);\r\n        for (let i = 0; i < gridObjArr.length; i++) {\r\n            const element = gridObjArr[i];\r\n            this._gridMapData[element.row][element.col] = weaponObj.id;\r\n        }\r\n    }\r\n\r\n    /* 合成更新 */\r\n    public updateGridItemData(weaponKey: string, wid: number) {\r\n        if (this._gridItemData.has(weaponKey)) {\r\n            let weaponObj = this._gridItemData.get(weaponKey)!;\r\n            weaponObj.wid = wid;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 通过坐标获取位置\r\n     * @param pos \r\n     */\r\n    private getTiledByPos(pos: Vec3) {\r\n        let tiledX = pos.x > 0 ? Math.floor((pos.x - this._gridWidth / 2) / (this._gridWidth + this._space)) : 3;\r\n        let tiledY = pos.y < 0 ? Math.floor((Math.abs(pos.y) - this._gredHeight / 2) / (this._gredHeight + this._space)) : 3;\r\n        let gridObj = new GridObj();\r\n        gridObj.row = tiledY;\r\n        gridObj.col = tiledX;\r\n        return gridObj;\r\n    }\r\n\r\n    /**\r\n     * 通过位置获取位置索引\r\n     * @param pos \r\n     */\r\n    private getTiledIndexByPos(pos: Vec3) {\r\n        let gridObj = this.getTiledByPos(pos);\r\n        if (gridObj.col < 0 || gridObj.row < 0 || gridObj.col > (this._gridRowLen - 1) || gridObj.row > (this._gridColLen - 1)) {\r\n            return -1\r\n        }\r\n        return this.getGridIndexByTiled(gridObj.row, gridObj.col);\r\n    }\r\n\r\n    /* 检测武器id是否相同 */\r\n    public checkSameWeapoIdByKey(weaponKey: string, wid: number) {\r\n        if (this._gridItemData.has(weaponKey)) {\r\n            let weaponObj = this._gridItemData.get(weaponKey)!;\r\n            if (wid == weaponObj.wid) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /* 间隔触摸点是否在位置上 */\r\n    public checkPointinGrid(touchPos: Vec2, gridObjArr: Array<GridObj>) {\r\n        let isTouch = false;\r\n        for (let i = 0; i < gridObjArr.length; i++) {\r\n            const gridObj = gridObjArr[i];\r\n            let pos = this.getGridPosByTiled(gridObj);\r\n            let rect = new Rect(pos.x - this._gridWidth / 2, pos.y - this.gridHeight / 2, this.gridWidth, this.gridHeight);\r\n            if (rect.contains(touchPos)) {\r\n                isTouch = true;\r\n                break;\r\n            }\r\n        }\r\n        return isTouch;\r\n    }\r\n\r\n    /**\r\n    * 通过位置获取位置索引\r\n    * @param row \r\n    * @param col \r\n    */\r\n    public getGridBgIndexByTiled(row: number, col: number) {\r\n        let row_col = this._bagCfg.max_gridLen.split('_');\r\n        return row * Number(row_col[1]) + col;\r\n    }\r\n\r\n    public clear() {\r\n        this._gridItemData.clear();\r\n        this._curWeaponTildeIndex = [];\r\n        this._bagCfg = null!;\r\n        this._gridEditMode = false;\r\n    }\r\n\r\n    private static _instance: GridData = null!;\r\n    public static get instance(): GridData {\r\n        if (!this._instance) {\r\n            this._instance = new GridData();\r\n        }\r\n        return this._instance;\r\n    }\r\n\r\n}\r\n\r\nexport class WeaponObj {\r\n    id: string = '';//唯一id\r\n    wid: number = 0;//武器id\r\n    gid: number = 0;//格子表id\r\n    data: Array<GridObj> = [];//位置数据\r\n}\r\n\r\nexport class GridObj {\r\n    row: number = 0;//行\r\n    col: number = 0;//列\r\n    toString(): string {\r\n        return `GridObj { row: ${this.row}, col: ${this.col} }`;\r\n    }\r\n}\r\n\r\n\r\n"]}