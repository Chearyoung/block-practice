{"version":3,"sources":["file:///Users/jhh/Desktop/projects/block_project/block-practice/block/assets/script/Mgr/TemplateMgr.ts"],"names":["TemplateMgr","resources","DEBUG","Tables","templates","weaponLevelDatas","heroLevelDatas","instance","sInstance","window","init","cb","console","log","selfThis","loadDir","err","assets","error","message","jsons","forEach","element","name","json","tables","fileName","Templates","initWeaponLevelDatas","initHeroLevelDatas","list","TbWeapon","getDataList","i","length","data","weaponId","level","dic","getWeaponLevelData","TbHeroLevel","heroId","getHeroLevelData","getConstCarTemp","TbConstCar","getConstCommonTemp","TbConstCommon","getStageByChapterId","cid","sid","tbStageSummary","TbStageSummary","tbChapterSummary","TbStage","cidArr","chapterId","push","id","sidArr","j"],"mappings":"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","sourcesContent":["import { resources, JsonAsset } from \"cc\";\nimport { DEBUG } from \"cc/env\";\nimport { Tables, TempConstCar, TempConstCommon, TempHeroLevel, TempWeapon } from \"../schema\";\n\nexport class TemplateMgr {\n\n    private static sInstance: TemplateMgr = null!;\n\n    public static instance() {\n        if (!TemplateMgr.sInstance) {\n            TemplateMgr.sInstance = new TemplateMgr();\n        }\n        if (DEBUG) {\n            // @ts-ignore\n            window[\"TemplateMgr\"] = TemplateMgr;\n        }\n        return TemplateMgr.sInstance;\n    }\n\n    /** 后面需要保证table初始化完成，加载配置成功后再进行游戏加载 */\n    public templates: Tables = null!;\n\n    /** 武器等级数据 */\n    private weaponLevelDatas: {[weaponId:number] : {[level:number] : TempWeapon}} = {};\n\n    /** 英雄等级数据 */\n    private heroLevelDatas: {[heroId:number] : {[level:number] : TempHeroLevel}} = {};\n\n    public init(cb: Function) {\n        console.log(\"开始加载策划配置\");\n        let selfThis = this;\n        resources.loadDir<JsonAsset>(\"template\",\n            function (err, assets) {\n                if (err) {\n                    console.error(err.message || err);\n                    return;\n                }\n\n                let jsons: any = {};\n\n                assets.forEach(element => {\n                    jsons[element.name] = element.json;\n                });\n\n                let tables = new Tables((fileName) => {\n                    return jsons[fileName];\n                });\n\n                console.log(\"配置加载完成\");\n                // console.log(\"测试输出 = \" + tables.TbItem.get(10000)!.name);\n                selfThis.templates = tables;\n                Templates = tables;\n\n                //二次加工数据\n                selfThis.initWeaponLevelDatas();\n                selfThis.initHeroLevelDatas();\n\n                cb();\n            })\n    }\n\n    /************************************* 武器 ************************************/\n\n    //初始化武器等级数据\n    private initWeaponLevelDatas():void {\n        this.weaponLevelDatas = {};\n        const list = Templates.TbWeapon.getDataList();\n        for (let i = 0; i < list.length; i++) {\n            const data = list[i];\n            const weaponId = data.weaponId;\n            const level = data.level;\n            let dic = this.weaponLevelDatas[weaponId];\n            if (!dic) {\n                dic = {};\n                this.weaponLevelDatas[weaponId] = dic;\n            }\n            dic[level] = data;\n        }\n    }\n\n    //获取武器等级数据\n    public getWeaponLevelData(weaponId:number, level:number):TempWeapon {\n        let dic = this.weaponLevelDatas[weaponId];\n        if (!dic) {\n            return null!;\n        }\n        const data = dic[level];\n        if (!data) {\n            return null!;\n        }\n        return data;\n    }\n\n    /************************************* 英雄 ************************************/\n\n    //初始化英雄等级数据\n    private initHeroLevelDatas():void {\n        this.heroLevelDatas = {};\n        const list = Templates.TbHeroLevel.getDataList();\n        for (let i = 0; i < list.length; i++) {\n            const data = list[i];\n            const heroId = data.heroId;\n            const level = data.level;\n            let dic = this.heroLevelDatas[heroId];\n            if (!dic) {\n                dic = {};\n                this.heroLevelDatas[heroId] = dic;\n            }\n            dic[level] = data;\n        }\n    }\n\n    //获取英雄等级数据\n    public getHeroLevelData(heroId:number, level:number):TempHeroLevel {\n        let dic = this.heroLevelDatas[heroId];\n        if (!dic) {\n            return null!;\n        }\n        const data = dic[level];\n        if (!data) {\n            return null!;\n        }\n        return data;\n    }\n\n    /************************************* 其他 ************************************/\n\n    //todo\n    /**\n     * 开车常量表\n     * @returns \n     */\n    getConstCarTemp(): TempConstCar {\n        return Templates.TbConstCar.getDataList()[0];\n    }\n\n    /**\n     * 通用常量表\n     * @returns \n     */\n    getConstCommonTemp(): TempConstCommon {\n        return Templates.TbConstCommon.getDataList()[0];\n    }\n\n\n    // 根据章数和关卡获取对应僵尸\n    public getStageByChapterId(cid: number, sid: number): Array<number> {\n        const tbStageSummary = Templates.TbStageSummary.getDataList();\n        const tbChapterSummary = Templates.TbStage.getDataList();\n        const cidArr: number[] = [];\n        for (let i = 0; i < tbStageSummary.length; i++) {\n            if (tbStageSummary[i].chapterId == cid) {\n                cidArr.push(tbStageSummary[i].id);\n            }\n        }\n\n        const sidArr: number[] = [];\n        for (let i = 0; i < cidArr.length; i++) {\n            if (cidArr[i] == sid) {\n                for (let j = 0; j < tbChapterSummary.length; j++) {\n                    if (tbChapterSummary[j].cid == sid) {\n                        sidArr.push(tbChapterSummary[j].id);\n                    }\n                }\n                break;\n            }\n        }\n        return sidArr;\n    }\n}\n\n// 缩短代码\nexport let Templates: Tables = TemplateMgr.instance().templates;"]}